# -*- coding: utf-8 -*-
"""train_test_split.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ezKxi2tJJc6MUlo8J86H_ogBClIy988I
"""

import pandas as pd
df = pd.read_csv("carprices.csv")
df.head()

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline

"""Car Mileage Vs Sell Price ($)**bold text**"""

plt.scatter(df['Mileage'],df['Sell Price($)'])

"""Car Age Vs Sell Price ($)"""

plt.scatter(df['Age(yrs)'],df['Sell Price($)'])

"""The approach we are going to use here is to split available data in two sets

Training: We will train our model on this dataset

Testing: We will use this subset to make actual predictions using trained model

The reason we don't use same training set for testing is because our model has seen those samples before, using same samples for making predictions might give us wrong impression about accuracy of our model. It is like you ask same questions in exam paper as you tought the students in the class.
"""

X = df[['Mileage','Age(yrs)']]

y = df['Sell Price($)']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3)

X_train

X_test

y_train

y_test

"""Lets run linear regression model now"""

from sklearn.linear_model import LinearRegression
clf = LinearRegression()
clf.fit(X_train, y_train)

X_test

clf.predict(X_test)

y_test

clf.score(X_test, y_test)

"""random_state argument"""

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=10)
X_test