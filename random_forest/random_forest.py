# -*- coding: utf-8 -*-
"""random_forest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aE8l4HUSS1gijOUGYKtsEw33SxsVnVGu

**Digits dataset from sklearn**
"""

import pandas as pd
from sklearn.datasets import load_digits
digits = load_digits()

dir(digits)

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt

plt.gray()
for i in range(4):
    plt.matshow(digits.images[i])

df = pd.DataFrame(digits.data)
df.head()

df['target'] = digits.target

df[0:12]

"""**Train and the model and prediction**"""

X = df.drop('target',axis='columns')
y = df.target

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2)

from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(n_estimators=20)
model.fit(X_train, y_train)

model.score(X_test, y_test)

y_predicted = model.predict(X_test)

"""**Confusion Matrix**"""

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_predicted)
cm

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
import seaborn as sn
plt.figure(figsize=(10,7))
sn.heatmap(cm, annot=True)
plt.xlabel('Predicted')
plt.ylabel('Truth')

"""# **Excercise**"""

from sklearn.datasets import load_iris
iris = load_iris()
dir(iris)

import pandas as pd
df = pd.DataFrame(iris.data, columns=iris.feature_names)
df.head()

df['target'] = iris.target
df.head()

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df.drop(['target'],axis='columns'),iris.target,test_size=0.2)

from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier()
model.fit(X_train, y_train)

model.score(X_test,y_test)

model = RandomForestClassifier(n_estimators=40)
model.fit(X_train, y_train)
model.score(X_test,y_test)